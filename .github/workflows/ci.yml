name: CI

on:
  push:
    paths-ignore:
      - 'requests/**'
      - '*.md'
  pull_request:
    paths-ignore:
      - 'requests/**'
      - '*.md'

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  test:
    name: Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version:
          - 22
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm i
      - run: npm t

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: npm i
      - uses: nearform-actions/optic-release-automation-action@v4
        with:
          # Token para criar releases e tags
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Token para publicar no npm (opcional, se você quiser publicar pacotes)
          npm-token: ${{ secrets.NPM_TOKEN }}
          # Configurações opcionais:
          # access: public  # para pacotes npm públicos
          # build-command: npm run build  # se você tiver um comando de build
          # test-command: npm test  # comando de teste (padrão: npm test)